<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="aihometraining.team.challenge.mapper.ChallengeConfigMapper">

	<resultMap type="ChallengeCategory" id="challengeCategoryResultMap">
		<result column="challengeCategoryCode" 		property="challengeCategoryCode"/>
		<result column="memberEmail" 				property="memberEmail"/>
		<result column="challengeCategoryName" 		property="challengeCategoryName"/>
		<result column="challengeCategoryRegDate" 	property="challengeCategoryRegDate"/>
		<result column="eClassCategorySmallCode" 	property="eClassCategorySmallCode"/>
		<result column="memberUpdateEmail"		 	property="memberUpdateEmail"/>
		<result column="memberUpdateDate" 			property="memberUpdateDate"/>
		
		<association property="member" javaType="Member">
			<id 	column="memberEmail" 			property="memberEmail"/>
			<result column="memberPw" 				property="memberPw"/>
			<result column="memberLevelCode" 		property="memberLevelCode"/>
			<result column="memberNewsAgree" 		property="memberNewsAgree"/>
			<result column="memberRegDate" 			property="memberRegDate"/>
			<result column="memberName" 			property="memberName"/>
			<result column="memberPhone"	 		property="memberPhone"/>
			<result column="memberNickname" 		property="memberNickname"/>
			<result column="memberBirthday" 		property="memberBirthday"/>
			<result column="memberGender" 			property="memberGender"/>
			<result column="memberRecommendEmail" 	property="memberRecommendEmail"/>
			<result column="memberFinalPoint" 		property="memberFinalPoint"/>
		</association>
	
		<association property="eClassCategorySmall" javaType="EClassCategorySmall">
			<id 	column="eClassCategorySmallCode" 				property="eClassCategorySmallCode"/>
			<result column="eClassCategorySmallName" 				property="eClassCategorySmallName"/>
			<result column="eClassCategoryMediumCode" 				property="eClassCategoryMediumCode"/>
			<result column="eClassCategoryMediumName" 				property="eClassCategoryMediumName"/>
			<result column="eClassCategoryLargeCode" 				property="eClassCategoryLargeCode"/>
			<result column="eClassCategoryLargeName" 				property="eClassCategoryLargeName"/>
			<result column="memberEmail" 							property="memberEmail"/>
			<result column="eClassCategorySmallRegDate" 			property="eClassCategorySmallRegDate"/>
			<result column="updateMemberEmail" 						property="updateMemberEmail"/>
			<result column="eClassCategorySmallFinalUpdateDate" 	property="eClassCategorySmallFinalUpdateDate"/>
		</association>
	</resultMap>
	
	<resultMap type="ChallengeGather" id="challengeGatherResultMap">
		<result column="challengeGatherCode" 			property="challengeGatherCode"/>
		<result column="memberEmail" 					property="memberEmail"/>
		<result column="challengeCategoryCode" 			property="challengeCategoryCode"/>
		<result column="challengeGatherName" 			property="challengeGatherName"/>
		<result column="challengeGatherIntro" 			property="challengeGatherIntro"/>
		<result column="challengeGatherMaxPeople" 		property="challengeGatherMaxPeople"/>
		<result column="challengeGatherProveMethod" 	property="challengeGatherProveMethod"/>
		<result column="challengeGatherProveContent" 	property="challengeGatherProveContent"/>
		<result column="challengeGatherProveFrequency" 	property="challengeGatherProveFrequency"/>
		<result column="challengeGatherAchieveRate" 	property="challengeGatherAchieveRate"/>
		<result column="challengeStartDate" 			property="challengeStartDate"/>
		<result column="challengeEndDate" 				property="challengeEndDate"/>
		<result column="challengeGatherRegDate" 		property="challengeGatherRegDate"/>
		<result column="memberEnterEmail" 				property="memberEnterEmail"/>
		<result column="challengeGatherStartDate" 		property="challengeGatherStartDate"/>
		<result column="challengeGatherEndDate" 		property="challengeGatherEndDate"/>
		
		<association property="member" javaType="Member">
			<id 	column="memberEmail" 				property="memberEmail"/>
			<result column="memberPw" 					property="memberPw"/>
			<result column="memberLevelCode" 			property="memberLevelCode"/>
			<result column="memberNewsAgree" 			property="memberPw"/>
			<result column="memberNewsAgree" 			property="memberNewsAgree"/>
			<result column="memberRegDate" 				property="memberRegDate"/>
			<result column="memberName" 				property="memberName"/>
			<result column="memberPhone" 				property="memberPhone"/>
			<result column="memberNickname" 			property="memberNickname"/>
			<result column="memberBirthday" 			property="memberBirthday"/>
			<result column="memberGender" 				property="memberGender"/>
			<result column="memberRecommendEmail" 		property="memberRecommendEmail"/>
			<result column="memberFinalPoint" 			property="memberFinalPoint"/>
		</association>
		
		<association property="challengeCategory" javaType="ChallengeCategory">
			<id 	column="challengeCategoryCode" 			property="challengeCategoryCode"/>
			<result column="memberEmail" 					property="memberEmail"/>
			<result column="challengeCategoryName" 			property="challengeCategoryName"/>
			<result column="challengeCategoryRegDate" 		property="challengeCategoryRegDate"/>
			<result column="eClassCategorySmallCode" 		property="eClassCategorySmallCode"/>
			<result column="memberUpdateEmail" 				property="memberUpdateEmail"/>
			<result column="memberUpdateDate" 				property="memberUpdateDate"/>
		</association>
	</resultMap>
	
	<resultMap type="ChallengeSetting" id="chllengeSettingResultMap">
		<result column="challengeSettingCode" 				property="challengeSettingCode"/>
		<result column="challengeSettingUpdateDo" 			property="challengeSettingUpdateDo"/>
	</resultMap>
	
	<resultMap type="ChallengePointGive" id="challengePointGiveResultMap">
		<result column="challengePointGiveCode" 		property="challengePointGiveCode"/>
		<result column="challengeCategoryCode" 			property="challengeCategoryCode"/>
		<result column="challengeGatherCode" 			property="challengeGatherCode"/>
		<result column="challengeEnterCode" 			property="challengeEnterCode"/>
		<result column="challengeGatherAchieveRate" 	property="challengeGatherAchieveRate"/>
		<result column="challengeEnterEmail" 			property="challengeEnterEmail"/>
		<result column="pointGiveStandardCode" 			property="pointGiveStandardCode"/>
		<result column="challengePointGiveDate" 		property="challengePointGiveDate"/>
		<result column="challengePointGivePoint" 		property="challengePointGivePoint"/>
		
		<association property="challengeCategory" javaType="ChallengeCategory">
			<id 	column="challengeCategoryCode" 			property="challengeCategoryCode"/>
			<result column="memberEmail" 					property="memberEmail"/>
			<result column="challengeCategoryName" 			property="challengeCategoryName"/>
			<result column="challengeCategoryRegDate" 		property="challengeCategoryRegDate"/>
			<result column="eClassCategorySmallCode" 		property="eClassCategorySmallCode"/>
			<result column="memberUpdateEmail" 				property="memberUpdateEmail"/>
			<result column="memberUpdateDate" 				property="memberUpdateDate"/>
		</association>
		
		<association property="challengeGather" javaType="ChallengeGather">
			<id 	column="challengeGatherCode" 			property="challengeGatherCode"/>
			<result column="memberEmail" 					property="memberEmail"/>
			<result column="challengeCategoryCode" 			property="challengeCategoryCode"/>
			<result column="challengeGatherName" 			property="challengeGatherName"/>
			<result column="challengeGatherIntro" 			property="challengeGatherIntro"/>
			<result column="challengeGatherMaxPeople" 		property="challengeGatherMaxPeople"/>
			<result column="challengeGatherProveMethod" 	property="challengeGatherProveMethod"/>
			<result column="challengeGatherProveContent" 	property="challengeGatherProveContent"/>
			<result column="challengeGatherProveFrequency" 	property="challengeGatherProveFrequency"/>
			<result column="challengeGatherAchieveRate" 	property="challengeGatherAchieveRate"/>
			<result column="challengeStartDate" 			property="challengeStartDate"/>
			<result column="challengeEndDate" 				property="challengeEndDate"/>
			<result column="challengeGatherRegDate" 		property="challengeGatherRegDate"/>
			<result column="memberEnterEmail" 				property="memberEnterEmail"/>
			<result column="challengeGatherStartDate" 		property="challengeGatherStartDate"/>
			<result column="challengeGatherEndDate" 		property="challengeGatherEndDate"/>
		</association>
		
		<association property="challengeEnter" javaType="ChallengeEnter">
			<id column="challengeEnterCode" property="challengeEnterCode"/>
			<result column="challengeCategoryCode" property="challengeCategoryCode"/>
			<result column="challengeGatherCode" property="challengeGatherCode"/>
			<result column="memberEmail" property="memberEmail"/>
			<result column="challengeEnterContent" property="challengeEnterContent"/>
			<result column="challengeEnterDeposit" property="challengeEnterDeposit"/>
			<result column="challengeEnterDate" property="challengeEnterDate"/>
			<result column="challengeServiceStartDate" property="challengeServiceStartDate"/>
			<result column="challengeServiceEndDate" property="challengeServiceEndDate"/>
		</association>
		
		<association property="member" javaType="Member">
			<id 	column="memberEmail" 				property="memberEmail"/>
			<result column="memberPw" 					property="memberPw"/>
			<result column="memberLevelCode" 			property="memberLevelCode"/>
			<result column="memberNewsAgree" 			property="memberPw"/>
			<result column="memberNewsAgree" 			property="memberNewsAgree"/>
			<result column="memberRegDate" 				property="memberRegDate"/>
			<result column="memberName" 				property="memberName"/>
			<result column="memberPhone" 				property="memberPhone"/>
			<result column="memberNickname" 			property="memberNickname"/>
			<result column="memberBirthday" 			property="memberBirthday"/>
			<result column="memberGender" 				property="memberGender"/>
			<result column="memberRecommendEmail" 		property="memberRecommendEmail"/>
			<result column="memberFinalPoint" 			property="memberFinalPoint"/>
		</association>
		
		<association property="pointGiveStandard" javaType="PointGiveStandard">
			<id column="pointGiveStandardCode" property="pointGiveStandardCode"/>
			<result column="pointGiveStandardNote" property="pointGiveStandardNote"/>
			<result column="pointGiveStandardPrice" property="pointGiveStandardPrice"/>
		</association>		
	</resultMap>
	
	<select id="getChallengeCategoryList" parameterType="map" resultType="map" resultMap="challengeCategoryResultMap">
		/*챌린지 카테고리 조회*/
		SELECT
			 cc.challengeCategoryCode
			,cc.eClassCategorySmallCode
			,ec.eClassCategorySmallName
			,m.memberEmail
			,cc.challengeCategoryName
			,cc.challengeCategoryRegDate	
		FROM
			member AS m
			inner join
			eclasscategorysmall AS ec
			ON
			m.memberEmail = ec.memberEmail
			inner join
			challengecategory AS cc
			on
			cc.eClassCategorySmallCode = ec.eClassCategorySmallCode
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchKey != null and searchKey !='' and searchValue != ''">
				AND 
					${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
			</if>
			<if test="searchKey != null and searchKey !='' and searchValue != '' and searchDate != null and searchDate !='' and searchStart != '' and searchEnd != ''">
				AND 
					${searchDate} BETWEEN #{searchStart} AND #{searchEnd}
			</if>
			<if test="btnKey != null and btnKey !='' and !btnKey.equals('-1 WEEK') and !btnKey.equals('-1 MONTH') and !btnKey.equals('-3 MONTH') and !btnKey.equals('-1 YEAR')">
				AND 
					${btnKey} = CURDATE()
			</if>
			<if test="btnKey != null and btnKey !='' and btnKey.equals('-1 WEEK')">
				AND 
					cc.challengeCategoryRegDate BETWEEN DATE_ADD(NOW(),INTERVAL ${btnKey} ) AND NOW()
			</if>
			<if test="btnKey != null and btnKey !='' and btnKey.equals('-1 MONTH')">
				AND 
					cc.challengeCategoryRegDate BETWEEN DATE_ADD(NOW(),INTERVAL ${btnKey} ) AND NOW()
			</if>
			<if test="btnKey != null and btnKey !='' and btnKey.equals('-3 MONTH')">
				AND 
					cc.challengeCategoryRegDate BETWEEN DATE_ADD(NOW(),INTERVAL ${btnKey} ) AND NOW()
			</if>
			<if test="btnKey != null and btnKey !='' and btnKey.equals('-1 YEAR')">
				AND 
					cc.challengeCategoryRegDate BETWEEN DATE_ADD(NOW(),INTERVAL ${btnKey} ) AND NOW()
			</if>
		</trim>
			ORDER BY cast(SUBSTRING_INDEX(cc.challengeCategoryCode,'_',-1) AS UNSIGNED) ASC;
	</select>
	
	<select id="getChallengeSettingList" parameterType="map" resultType="map"  resultMap="chllengeSettingResultMap">
		/*챌린지 세팅 목록 조회*/
		SELECT
			 cs.challengeSettingCode
			,cs.challengeSettingUpdateDo
		FROM
			challengesetting AS cs
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchKey2 != null and searchKey2 !='' and searchValue2 != ''">
				AND 
					${searchKey2} LIKE CONCAT('%', #{searchValue2}, '%')
			</if>
		</trim>
			ORDER BY cast(SUBSTRING_INDEX(cs.challengeSettingCode,'_',-1) AS UNSIGNED) ASC;
	</select>
	
	<select id="getClassCategoryList" resultType="EClassCategorySmall">
		/* 운동클래스카테고리small 조회 */
		SELECT
			 ec.eClassCategorySmallCode
			,ec.eClassCategorySmallName
		FROM
			eclasscategorysmall AS ec;
	
	</select>
	
	<insert id="challengeCategoryInsert" parameterType="ChallengeCategory">
		/* 챌린지 카테고리 등록 처리 */
		INSERT INTO challengecategory
		( 	 challengeCategoryCode
			, memberEmail
			, challengeCategoryName
			, challengeCategoryRegDate
			, eClassCategorySmallCode
			, memberUpdateEmail
			, memberUpdateDate
		)VALUES (
		 	  #{challengeCategoryCode}
			, #{memberEmail}
			, #{challengeCategoryName}
			, CURDATE()
			, #{eClassCategorySmallCode}
			, #{memberUpdateEmail}
			, CURDATE()
		);
		
	</insert>
	
	<select id="getChallengeCategoryByCode" parameterType="String" resultMap="challengeCategoryResultMap">
		/* 카테고리 코드별 챌린지 카테고리 정보 조회 */
		SELECT
			 cc.challengeCategoryCode
			,cc.challengeCategoryName
			,eg.eClassCategorySmallCode
			,eg.eClassCategorySmallName
		FROM
			challengecategory AS cc
			INNER join
			eclasscategorysmall AS eg
			on
			cc.eClassCategorySmallCode = eg.eClassCategorySmallCode
		WHERE
			cc.challengeCategoryCode = #{challengeCategoryCode};
		
	</select>
	
	<update id="challengeCategoryUpdate" parameterType="ChallengeCategory">
		/* 챌린지 카테고리 수정처리 (fk값으로 잡힌건 어떻게 해야할지 물어봐야할듯! casecade를 이용하자)*/
		UPDATE challengecategory
		<trim prefix="SET" suffixOverrides=",">
			<if test="challengeCategoryName !=null and challengeCategoryName !=''">
				challengeCategoryName = #{challengeCategoryName},
			</if>
			<if test="memberUpdateEmail !=null and memberUpdateEmail !=''">
				memberUpdateEmail = #{memberUpdateEmail},
			</if>
		</trim>
			,memberUpdateDate=CURDATE()
		WHERE
			challengeCategoryCode = #{challengeCategoryCode};
	</update>
	
	<delete id="reportDeleteBycateCode" parameterType="String">
		/* 챌린지 카테고리 코드에 따른 신고내역 삭제(챌린지 카테고리 삭제처리 )*/
		DELETE
			cr
		FROM
			challengecategory AS cc
			INNER JOIN
			challengegather AS cg
			ON
			cc.challengeCategoryCode = cg.challengeCategoryCode
			INNER join
			challengegatherplan AS cgp
			ON
			cc.challengeCategoryCode = cgp.challengeCategoryCode
			INNER join
			challengegatherplando AS cgd
			ON
			cc.challengeCategoryCode = cgd.challengeCategoryCode
			INNER JOIN
			challengeenter AS ce
			ON
			cc.challengeCategoryCode = ce.challengeCategoryCode  
			INNER JOIN
			challengepointgive AS cpg
			ON
			cc.challengeCategoryCode = cpg.challengeCategoryCode
			INNER JOIN
			challengereport AS cr
			ON
			cr.challengeCategoryCode = cc.challengeCategoryCode
		where
			cc.challengeCategoryCode = #{challengeCategoryCode};
	</delete>
	
	<delete id="pointDeleteBycateCode" parameterType="String">
		/* 챌린지 카테고리 코드에 따른 포인트 내역 삭제(챌린지 카테고리 삭제처리 )*/
		DELETE
			cpg
		FROM
			challengecategory AS cc
			INNER JOIN
			challengegather AS cg
			ON
			cc.challengeCategoryCode = cg.challengeCategoryCode
			INNER join
			challengegatherplan AS cgp
			ON
			cc.challengeCategoryCode = cgp.challengeCategoryCode
			INNER join
			challengegatherplando AS cgd
			ON
			cc.challengeCategoryCode = cgd.challengeCategoryCode
			INNER JOIN
			challengeenter AS ce
			ON
			cc.challengeCategoryCode = ce.challengeCategoryCode  
			INNER JOIN
			challengepointgive AS cpg
			ON
			cc.challengeCategoryCode = cpg.challengeCategoryCode
		where
			cc.challengeCategoryCode = #{challengeCategoryCode};
	</delete>
	
	<delete id="enterDeleteBycateCode" parameterType="String">
		/* 챌린지 카테고리 코드에 따른 챌린지참여 내역 삭제(챌린지 카테고리 삭제처리 )*/
		DELETE
			ce
		FROM
			challengecategory AS cc
			INNER JOIN
			challengegather AS cg
			ON
			cc.challengeCategoryCode = cg.challengeCategoryCode
			INNER join
			challengegatherplan AS cgp
			ON
			cc.challengeCategoryCode = cgp.challengeCategoryCode
			INNER join
			challengegatherplando AS cgd
			ON
			cc.challengeCategoryCode = cgd.challengeCategoryCode
			INNER JOIN
			challengeenter AS ce
			ON
			cc.challengeCategoryCode = ce.challengeCategoryCode
		where
			cc.challengeCategoryCode = #{challengeCategoryCode};
	</delete>
	
	<delete id="planDoDeleteBycateCode">
		/* 챌린지 카테고리 코드에 따른 챌린지실행 내역 삭제(챌린지 카테고리 삭제처리 )*/
		DELETE
			cgd
		FROM
			challengecategory AS cc
			INNER JOIN
			challengegather AS cg
			ON
			cc.challengeCategoryCode = cg.challengeCategoryCode
			INNER join
			challengegatherplan AS cgp
			ON
			cc.challengeCategoryCode = cgp.challengeCategoryCode
			INNER join
			challengegatherplando AS cgd
			ON
			cc.challengeCategoryCode = cgd.challengeCategoryCode
		where
			cc.challengeCategoryCode = #{challengeCategoryCode};
	</delete>
	
	<delete id="planDeleteBycateCode">
		/* 챌린지 카테고리 코드에 따른 챌린지 모집계획 내역 삭제(챌린지 카테고리 삭제처리 )*/
		DELETE
			cgp
		FROM
			challengecategory AS cc
			INNER JOIN
			challengegather AS cg
			ON
			cc.challengeCategoryCode = cg.challengeCategoryCode
			INNER join
			challengegatherplan AS cgp
			ON
			cc.challengeCategoryCode = cgp.challengeCategoryCode
		where
			cc.challengeCategoryCode = #{challengeCategoryCode};
	</delete>
		
	<delete id="gatherDeleteBycateCode">
		/* 챌린지 카테고리 코드에 따른 챌린지 모집 내역 삭제(챌린지 카테고리 삭제처리 )*/
		DELETE
			cg
		FROM
			challengecategory AS cc
			INNER JOIN
			challengegather AS cg
			on
			cc.challengeCategoryCode = cg.challengeCategoryCode
		where
			cc.challengeCategoryCode = #{challengeCategoryCode};
	</delete>
	
	<delete id="challengeCategoryDelete">
		/* 챌린지 카테고리 코드에 따른 챌린지 카테고리 내역 삭제(챌린지 카테고리 삭제처리 )*/
		DELETE
			cc
		FROM
			challengecategory AS cc
		where
			cc.challengeCategoryCode = #{challengeCategoryCode};
	</delete>
	
	<insert id="challengeSettingInsert" parameterType="ChallengeSetting">
		/* 챌린지 세팅 등록 처리 */
		INSERT INTO challengesetting
		(
			 challengeSettingCode
			,challengeSettingUpdateDo
		)VALUES (
			 #{challengeSettingCode}
			,#{challengeSettingUpdateDo}
		);
	</insert>
	
	<select id="getChallengeSettingByCode" parameterType="String" resultMap="chllengeSettingResultMap">
		/* 챌린지 세팅 코드별 세팅 정보 조회 */
		SELECT
			 cs.challengeSettingCode
			,cs.challengeSettingUpdateDo
		FROM
			challengesetting AS cs
		WHERE
			cs.challengeSettingCode = #{challengeSettingCode};
	</select>
	
	<update id="challengeSettingUpdate">
		/*챌린지 세팅 수정 처리*/
		UPDATE challengesetting
		<trim prefix="SET" suffixOverrides=",">
			<if test="challengeSettingUpdateDo !=null and challengeSettingUpdateDo !=''">
				challengeSettingUpdateDo = #{challengeSettingUpdateDo},
			</if>
		</trim>
		WHERE challengeSettingCode= #{challengeSettingCode};
	</update>
	
	<select id="getGetherList" parameterType="map" resultType="map" resultMap="challengeGatherResultMap">
		/* 모집 챌린지 목록 조회 */
		SELECT 
			 cg.challengeGatherCode
			,cg.memberEmail
			,cg.challengeCategoryCode
			,cg.challengeGatherName
			,cc.challengeCategoryName
			,cg.challengeGatherRegDate
			,cg.challengeGatherStartDate
			,cg.challengeGatherEndDate
		FROM 
			challengegather AS cg
			INNER join
			challengecategory AS cc
			on
			cg.challengeCategoryCode = cc.challengeCategoryCode
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchKey != null and searchKey !='' and searchValue != ''">
				AND 
					${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
			</if>
			<if test='searchKey != null and searchKey !="" and searchValue != "" and searchDate != null and searchDate !="" and searchDate.equals("challengeGatherRegDate") and searchStart != "" and searchEnd != ""'>
				AND 
					${searchDate} BETWEEN #{searchStart} AND #{searchEnd}
			</if>
			<if test="searchKey != null and searchKey !='' and searchValue != '' and searchDate != null and searchDate !='' and gatherStartDate != null and gatherStartDate !='' and gatherEndDate != null and gatherEndDate !='' and searchStart != '' and searchEnd != ''">
				AND 
					${gatherStartDate} <![CDATA[>]]> #{searchStart}
				AND	
					${gatherEndDate} <![CDATA[<=]]> #{searchEnd}
			</if>
		</trim>
			ORDER BY cast(SUBSTRING_INDEX(cg.challengeGatherCode,'_',-1) AS UNSIGNED) ASC;
	</select>
	
	<select id="getListDetailByCode" parameterType="String" resultMap="challengeGatherResultMap">
		/*모집 챌린지 코드별 모집 챌린지 세부 정보 조회*/
		SELECT 
			 cg.challengeGatherName
			,cg.challengeGatherIntro
			,cg.challengeGatherMaxPeople
			,cg.challengeGatherProveMethod
			,cg.challengeGatherProveContent
			,cg.challengeGatherProveFrequency
			,cg.challengeGatherAchieveRate
			,cg.challengeStartDate
			,cg.challengeEndDate
			,cg.challengeGatherRegDate
			,cg.memberEnterEmail
			,cg.challengeGatherStartDate
			,cg.challengeGatherEndDate
		FROM 
			challengegather AS cg
		where
			cg.challengeGatherCode = #{challengeGatherCode};
	</select>
	
	<select id="getChallengeIngList" parameterType="map" resultType="map" resultMap="challengeGatherResultMap">
		/* 진행 챌린지 목록 조회 */
			SELECT
				 cg.challengeGatherCode
				,cg.memberEmail
				,cg.challengeCategoryCode
				,cg.challengeGatherName
				,cc.challengeCategoryName
				,cg.challengeGatherRegDate
				,cg.challengeStartDate
				,cg.challengeEndDate
			FROM
				challengegather AS cg
				INNER join
				challengecategory AS cc
				on
				cg.challengeCategoryCode = cc.challengeCategoryCode
		  <trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchKey != null and searchKey !='' and searchValue != ''">
				AND 
					${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
			</if>
			<if test='searchKey != null and searchKey !="" and searchValue != "" and searchDate != null and searchDate !="" and searchDate.equals("challengeGatherRegDate") and searchStart != "" and searchEnd != ""'>
				AND 
					${searchDate} BETWEEN #{searchStart} AND #{searchEnd}
			</if>
			<if test="searchKey != null and searchKey !='' and searchValue != '' and searchDate != null and searchDate !='' and ingStartDate != null and ingStartDate !='' and ingEndDate != null and ingEndDate !='' and searchStart != '' and searchEnd != ''">
				AND 
					${ingStartDate} <![CDATA[>]]> #{searchStart}
				AND	
					${ingEndDate} <![CDATA[<=]]> #{searchEnd}
			</if>
		
				AND  
					cg.challengeStartDate <![CDATA[<=]]> CURDATE()
				AND
					cg.challengeEndDate <![CDATA[>]]> CURDATE()
		  
		</trim>
			ORDER BY cast(SUBSTRING_INDEX(cg.challengeGatherCode,'_',-1) AS UNSIGNED) ASC;
		  
	</select>
	
	<select id="getChallengePointList" parameterType="map" resultType="map" resultMap="challengePointGiveResultMap">
		/* 챌린지 포인트 관리 목록 조회 */
		SELECT 
		     cpg.challengePointGiveCode
			,cc.challengeCategoryName
			,cg.challengeGatherName
			,m.memberEmail
			,cpg.challengeGatherAchieveRate
			,ps.pointGiveStandardNote
			,ps.pointGiveStandardPrice
			,cpg.challengePointGiveDate
		FROM 
			challengepointgive AS cpg
			INNER join
			challengecategory AS cc
			on
			cpg.challengeCategoryCode = cc.challengeCategoryCode
			INNER JOIN
			challengegather AS cg
			on
			cg.challengeGatherCode = cpg.challengeGatherCode
			INNER join
			member AS m
			on
			m.memberEmail = cpg.challengeEnterEmail
			INNER join
			pointgivestandard AS ps
			on
			ps.pointGiveStandardCode = cpg.pointGiveStandardCode
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchKey != null and searchKey !='' and searchValue != ''">
				AND 
					${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
			</if>
			<if test="searchKey != null and searchKey !='' and searchValue != '' and searchDate != null and searchDate !='' and searchStart != '' and searchEnd != ''">
				AND 
					${searchDate} BETWEEN #{searchStart} AND #{searchEnd}
			</if>
		</trim>
			ORDER BY cast(SUBSTRING_INDEX(cpg.challengePointGiveCode,'_',-1) AS UNSIGNED) ASC;
	</select>
	
	<select id="getPointDetailByCode" parameterType="String" resultMap="challengePointGiveResultMap">
		/* 챌린지 포인트 코드별 포인트 관리 세부 조회 */
		SELECT
			 ce.memberEmail
			,cg.challengeGatherAchieveRate
			,pg.pointGiveStandardNote
			,pg.pointGiveStandardPrice
			,cg.challengeGatherName
		FROM
			challengepointgive AS cpg
			INNER join
			challengeenter AS ce
			on
			cpg.challengeEnterCode = ce.challengeEnterCode
			INNER JOIN
			challengegather AS cg
			on
			cpg.challengeGatherCode = cg.challengeGatherCode
			INNER join
			pointgivestandard AS pg
			on
			cpg.pointGiveStandardCode = pg.pointGiveStandardCode
		WHERE
			cpg.challengePointGiveCode = #{challengePointGiveCode};
	</select>
</mapper>	
	
  