<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
	<mapper namespace="aihometraining.team.workoutLog.mapper.WorkoutLogUserMapper">
	<resultMap type="WorkoutGoal" id="WorkoutGoalResultMap">
			<result	column="workoutGoalCode" 		property="workoutGoalCode"/>
			<result column="memberEmail" 			property="memberEmail"/>
			<result column="workoutGoalContent" 	property="workoutGoalContent"/>
			<result column="workoutGoalStartDate" 	property="workoutGoalStartDate"/>
			<result column="workoutGoalEndDate" 	property="workoutGoalEndDate"/>
			<result column="workoutGoalUpdateDate" 	property="workoutGoalUpdateDate"/>
			<result column="memberUpdateEmail" 		property="memberUpdateEmail"/>
			
		<association property="member" javaType="Member">
			<id 	column="memberEmail" property="memberEmail"/>
		</association>	
	</resultMap>
		
	<resultMap type="WorkoutLogPrivacybounds" id="WorkoutLogPrivacyboundsResultMap">	
			<result	column="workoutLogPrivacyBoundsCode" 		property="workoutLogPrivacyBoundsCode"/>
			<result column="workoutLogPrivacyBoundsContent" 	property="workoutLogPrivacyBoundsContent"/>
	</resultMap>
	
	<resultMap type="EClassCategoryLarge" id="EClassCategoryLargeResultMap">
			<result	column="eClassCategoryLargeCode" 			property="eClassCategoryLargeCode"/>
			<result column="eClassCategoryLargeName" 			property="eClassCategoryLargeName"/>
			<result column="eClassCategoryLargeRegEmail" 		property="eClassCategoryLargeRegEmail"/>
			<result column="eClassCategoryLargeRegDate" 		property="eClassCategoryLargeRegDate"/>
			<result column="eClassCategoryLargeUpdateDate" 		property="eClassCategoryLargeUpdateDate"/>
			<result column="eClassCategoryLargeUpdateEmail" 	property="eClassCategoryLargeUpdateEmail"/>
	</resultMap>
	
	<resultMap type="EClassCategoryMedium" id="EClassCategoryMediumResultMap">
			<result	column="eClassCategoryMediumCode" 			property="eClassCategoryMediumCode"/>
			<result column="eClassCategoryMediumName" 			property="eClassCategoryMediumName"/>
			<result column="eClassCategoryLargeCode" 			property="eClassCategoryLargeCode"/>
			<result column="eClassCategoryLargeName" 			property="eClassCategoryLargeName"/>
			<result column="memberEmail" 						property="memberEmail"/>
			<result column="eClassCategoryMediumRegDate" 		property="eClassCategoryMediumRegDate"/>
			<result column="memberUpdateEmail" 					property="memberUpdateEmail"/>
			<result column="eClassCategoryMediumUpdateDate" 	property="eClassCategoryMediumUpdateDate"/>
	</resultMap>
	
	<resultMap type="EClassCategorySmall" id="EClassCategorySmallResultMap">	
			<result	column="eClassCategorySmallCode" 				property="eClassCategorySmallCode"/>
			<result column="eClassCategorySmallName" 				property="eClassCategorySmallName"/>
			<result column="eClassCategoryMediumCode" 				property="eClassCategoryMediumCode"/>
			<result column="eClassCategoryMediumName" 				property="eClassCategoryMediumName"/>
			<result column="eClassCategoryLargeCode" 				property="eClassCategoryLargeCode"/>
			<result column="eClassCategoryLargeName" 				property="eClassCategoryLargeName"/>
			<result column="memberEmail" 							property="memberEmail"/>
			<result column="eClassCategorySmallRegDate" 			property="eClassCategorySmallRegDate"/>
			<result column="updateMemberEmail" 						property="updateMemberEmail"/>
			<result column="eClassCategorySmallFinalUpdateDate" 	property="eClassCategorySmallFinalUpdateDate"/>
	</resultMap>
	
	<resultMap type="WorkoutLog" id="WorkoutLogResultMap">
			<result	column="workoutLogCode" 				property="workoutLogCode"/>
			<result column="memberEmail" 					property="memberEmail"/>
			<result column="workoutLogLikeCount" 			property="workoutLogLikeCount"/>
			<result column="eClassCategorySmallCode" 		property="eClassCategorySmallCode"/>
			<result column="eClassCategorySmallName" 		property="eClassCategorySmallName"/>
			<result column="workoutLogTitle" 				property="workoutLogTitle"/>
			<result column="workoutLogContent" 				property="workoutLogContent"/>
			<result column="workoutGoalPlanCode" 			property="workoutGoalPlanCode"/>
			<result column="eClassTaskDoCode" 				property="eClassTaskDoCode"/>
			<result column="challengeEnterCode" 			property="challengeEnterCode"/>
			<result column="workoutLogPrivacyBoundsCode" 	property="workoutLogPrivacyBoundsCode"/>
			<result column="workoutLogUpdateEmail" 			property="workoutLogUpdateEmail"/>
			<result column="workoutLogDeleteEmail" 			property="workoutLogDeleteEmail"/>
			
			<association property="eClassCategoryLarge" javaType="EClassCategoryLarge">
				<id		column="eClassCategoryLargeCode" 				property="eClassCategoryLargeCode"/>
				<result column="eClassCategoryLargeName" 				property="eClassCategoryLargeName"/>
			</association>
			
			<association property="eClassCategoryMedium" javaType="EClassCategoryMedium">
				<id		column="eClassCategoryMediumCode" 				property="eClassCategoryMediumCode"/>
				<result column="eClassCategoryMediumName" 				property="eClassCategoryMediumName"/>
			</association>
			
			<association property="eClassCategorySmall" javaType="EClassCategorySmall">
				<id		column="eClassCategorySmallCode" 				property="eClassCategorySmallCode"/>
				<result column="eClassCategorySmallName" 				property="eClassCategorySmallName"/>
				<result column="eClassCategoryMediumCode" 				property="eClassCategoryMediumCode"/>
				<result column="eClassCategoryMediumName" 				property="eClassCategoryMediumName"/>
				<result column="eClassCategoryLargeCode" 				property="eClassCategoryLargeCode"/>
				<result column="eClassCategoryLargeName" 				property="eClassCategoryLargeName"/>
				<result column="memberEmail" 							property="memberEmail"/>
				<result column="eClassCategorySmallRegDate" 			property="eClassCategorySmallRegDate"/>
				<result column="updateMemberEmail" 						property="updateMemberEmail"/>
				<result column="eClassCategorySmallFinalUpdateDate" 	property="eClassCategorySmallFinalUpdateDate"/>
			</association>
			
			<association property="workoutLogPrivacybounds" javaType="WorkoutLogPrivacybounds">
				<id		column="workoutLogPrivacyBoundsCode" 		property="workoutLogPrivacyBoundsCode"/>
				<result column="workoutLogPrivacyBoundsContent" 	property="workoutLogPrivacyBoundsContent"/>
			</association>
			
			<collection property="fileList" javaType="List" ofType="FileDto">
				<id 	column="fileIdx" 						property="fileIdx"/>
				<result	column="fileOriginalName" 			property="fileOriginalName"/>
				<result column="fileNewName" 				property="fileNewName"/>
				<result column="filePath" 					property="filePath"/>
				<result column="fileSize" 					property="fileSize"/>
			</collection>
	</resultMap>
	
	<resultMap type="WorkoutGoalPlan" id="WorkoutGoalPlanResultmap">
		<result	column="workoutGoalPlanCode" 				property="workoutGoalPlanCode"/>
		<result column="memberEmail" 						property="memberEmail"/>
		<result column="workoutGoalCode" 					property="workoutGoalCode"/>
		<result column="workoutGoalPlanStartDate" 			property="workoutGoalPlanStartDate"/>
		<result column="workoutGoalPlanFinalDate" 			property="workoutGoalPlanFinalDate"/>
		<result column="workoutGoalPlanContent" 			property="workoutGoalPlanContent"/>
		<result column="workoutGoalPlanUpdateEmail" 		property="workoutGoalPlanUpdateEmail"/>
		<result column="workoutGoalPlanFinalUpdateTime" 	property="workoutGoalPlanFinalUpdateTime"/>
		<result column="fileIdx" 							property="fileIdx"/>
		<result column="AIWorkoutPerformanceCount" 			property="AIWorkoutPerformanceCount"/>
		<result column="AIWorkoutPerformanceGoal" 			property="AIWorkoutPerformanceGoal"/>
		<result column="workoutGoalPlanAchieveState" 		property="workoutGoalPlanAchieveState"/>
		<result column="workoutGoalPlanCategoryCode" 		property="workoutGoalPlanCategoryCode"/>	
	</resultMap>
	
	<resultMap type="WorkoutLogLike" id="WorkoutLogLikeResultmap">
		<result	column="workoutLogLikeNum" 				property="workoutLogLikeNum"/>
		<result column="workoutLogLikeEmail" 			property="workoutLogLikeEmail"/>
		<result column="workoutLogCode" 				property="workoutLogCode"/>
		<result column="workoutLogLikeRegDate" 			property="workoutLogLikeRegDate"/>
		
		<association property="member" javaType="Member">
			<id 	column="memberEmail" property="memberEmail"/>
		</association>	
		
		<association property="workoutLog" javaType="WorkoutLog">
			<id 	column="workoutLogCode" 				property="workoutLogCode"/>
			<result column="memberEmail" 					property="memberEmail"/>
			<result column="workoutLogLikeCount" 			property="workoutLogLikeCount"/>
			<result column="eClassCategorySmallCode" 		property="eClassCategorySmallCode"/>
			<result column="eClassCategorySmallName" 		property="eClassCategorySmallName"/>
			<result column="workoutLogTitle" 				property="workoutLogTitle"/>
			<result column="workoutLogContent" 				property="workoutLogContent"/>
			<result column="workoutGoalPlanCode" 			property="workoutGoalPlanCode"/>
			<result column="eClassTaskDoCode" 				property="eClassTaskDoCode"/>
			<result column="challengeEnterCode" 			property="challengeEnterCode"/>
			<result column="workoutLogPrivacyBoundsCode" 	property="workoutLogPrivacyBoundsCode"/>
			<result column="workoutLogUpdateEmail" 			property="workoutLogUpdateEmail"/>
			<result column="workoutLogDeleteEmail" 			property="workoutLogDeleteEmail"/>
		</association>	
	</resultMap>
		
	<resultMap type="EClassTake" id="EClassTakeResultmap">
		<result	column="eClassTakeCode" 			property="eClassTakeCode"/>
		<result column="memberEmail" 				property="memberEmail"/>
		<result column="memberPhone" 				property="memberPhone"/>
		<result column="eClassApprovedCode" 		property="eClassApprovedCode"/>
		<result column="eClassTakeRegDate" 			property="eClassTakeRegDate"/>
		<result column="eClassTakeState" 			property="eClassTakeState"/>
		<result column="paymentGroupCode" 			property="paymentGroupCode"/>
		
		<association property="eClassApproved" javaType="EClassApproved">
			<id 	column="eClassApprovedCode" 				property="eClassApprovedCode"/>
			<result column="eClassOpenApplyCode" 				property="eClassOpenApplyCode"/>
			<result column="memberEmail" 						property="memberEmail"/>
			<result column="eClassApprovedName" 				property="eClassApprovedName"/>
			<result column="eClassApprovedSetDate" 				property="eClassApprovedSetDate"/>
			<result column="eClassApprovedStratDate" 			property="eClassApprovedStratDate"/>
			<result column="eClassApprovedEndDate" 				property="eClassApprovedEndDate"/>
			<result column="eClassApprovedStudent" 				property="eClassApprovedStudent"/>
			<result column="eClassApprovedMaxStudent" 			property="eClassApprovedMaxStudent"/>
			<result column="eClassIntroduceCode" 				property="eClassIntroduceCode"/>
			<result column="eClassApprovedDate" 				property="eClassApprovedDate"/>
			<result column="eClassApprovedFinish" 				property="eClassApprovedFinish"/>
		</association>
	</resultMap>
	
		<insert id="workoutLogLikeInsert" parameterType="WorkoutLogLike">
			/* 일지 좋아요 등록 */
			INSERT INTO 
				  workoutloglike
			(
				  workoutLogLikeNum
				, workoutLogLikeEmail
				, workoutLogCode
				, workoutLogLikeRegDate
			)VALUES (
				  #{workoutLogLikeNum}
				, #{workoutLogLikeEmail}
				, #{workoutLogCode}
				, NOW()
			);
		</insert>
	
		<select id="getworkoutLogLikeCount" parameterType="String" resultType="String">
			/* 일지 좋아요 갯수 조회 */
			SELECT
				wl.workoutLogLikeCount
			FROM
				workoutlog AS wl
			WHERE
				wl.workoutLogCode = #{workoutLogCode};
		</select>
		
		<update id="workoutLogLikeCountUpdate" parameterType="String">
			/* 좋아요 카운트 수정 */
			UPDATE 
				workoutlog
			SET
				workoutLogLikeCount=workoutLogLikeCount+1
			WHERE 
				workoutLogCode=#{workoutLogCode};
		</update>
		
		<select id="getworkoutLogByCode" resultMap="WorkoutLogResultMap">
			/* 일지 코드로 일지 목록 조회 */
			SELECT 
				  wl.workoutLogCode
				, wl.memberEmail
				, wl.workoutLogLikeCount
				, wl.eClassCategorySmallCode
				, wl.eClassCategorySmallName
				, wl.workoutLogTitle
				, wl.workoutLogContent
				, wl.workoutGoalPlanCode
				, wl.eClassTaskDoCode
				, wl.challengeEnterCode
				, f.fileIdx
				, f.filepath
				, SUBSTRING_INDEX(f.fileOriginalName,'.',1)
				, wl.workoutLogPrivacyBoundsCode
				, wl.workoutLogUpdateEmail
				, wl.workoutLogUpdateFinalDate
				, wl.workoutLogDeleteEmail
			FROM 
				workoutlog AS wl
				LEFT JOIN 
				tb_file_control AS fc
				ON
				wl.workoutLogcode = fc.referenceCode
				LEFT JOIN 
				tb_file AS f
				ON 
				fc.fileIdx = f.fileIdx
			WHERE
				wl.workoutLogCode = #{workoutLogCode};
				
		</select>
		
		<update id="workoutLogUpdate" parameterType="WorkoutLog">
			/* 일지 수정 처리 */
			UPDATE 
				workoutlog
			<trim prefix="SET" suffixOverrides=",">
				<if test="eClassCategorySmallCode !=null and eClassCategorySmallCode !=''">
					eClassCategorySmallCode=#{eClassCategorySmallCode},
				</if>
				<if test="eClassCategorySmallName !=null and eClassCategorySmallName !=''">
					eClassCategorySmallName=#{eClassCategorySmallName},
				</if>
				<if test="workoutLogTitle !=null and workoutLogTitle !=''">
					workoutLogTitle=#{workoutLogTitle},
				</if>
				<if test="workoutLogContent !=null and workoutLogContent !=''">
					workoutLogContent=#{workoutLogContent},
				</if>
				<if test="workoutLogPrivacyBoundsCode !=null and workoutLogPrivacyBoundsCode !=''">
					workoutLogPrivacyBoundsCode=#{workoutLogPrivacyBoundsCode}
				</if>			
			</trim>
			WHERE 
				workoutLogCode=#{workoutLogCode};
		</update>
	
	
		<select id="getworkoutLogByLogCode" parameterType="String" resultMap="WorkoutLogResultMap">
			/* 일지 수정 화면 - 일지 코드로 일지 조회 */
			SELECT
			     w.workoutLogCode
				,w.eClassCategorySmallCode
				,w.eClassCategorySmallName
				,w.workoutLogTitle
				,w.workoutLogContent
				,es.eClassCategoryMediumCode
				,es.eClassCategoryMediumName
				,es.eClassCategoryLargeCode
				,es.eClassCategoryLargeName
				,wb.workoutLogPrivacyBoundsCode
				,wb.workoutLogPrivacyBoundsContent
			FROM 
				eclasscategorysmall AS es
				INNER JOIN 
				workoutlog AS w
				ON 
				es.eClassCategorySmallCode = w.eClassCategorySmallCode
				JOIN
				workoutlogprivacybounds AS wb
				ON 
				wb.workoutLogPrivacyBoundsCode = w.workoutLogPrivacyBoundsCode
			WHERE
				w.workoutLogCode = #{workoutLogCode};
			
		</select>
	
		<select id="getworkoutLogList" resultMap="WorkoutLogResultMap">
			/* 일지 목록 조회 */
			SELECT 
				  wl.workoutLogCode
				, wl.memberEmail
				, wl.workoutLogLikeCount
				, wl.eClassCategorySmallCode
				, wl.eClassCategorySmallName
				, wl.workoutLogTitle
				, wl.workoutLogContent
				, wl.workoutGoalPlanCode
				, wl.eClassTaskDoCode
				, wl.challengeEnterCode
				, f.fileIdx
				, f.filepath
				, SUBSTRING_INDEX(f.fileOriginalName,'.',1)
				, wl.workoutLogPrivacyBoundsCode
				, wl.workoutLogUpdateEmail
				, wl.workoutLogUpdateFinalDate
				, wl.workoutLogDeleteEmail
			FROM 
				workoutlog AS wl
				LEFT JOIN 
				tb_file_control AS fc
				ON
				wl.workoutLogcode = fc.referenceCode
				LEFT JOIN 
				tb_file AS f
				ON 
				fc.fileIdx = f.fileIdx
			WHERE
				wl.memberEmail = 'id005@email.com';
				
		</select>
		
		<!-- <select id="geteClassTakeList" resultMap="EClassTakeResultmap">
			/* 수강 중인 운동 클래스 목록 조회 */
			SELECT
				 et.eClassTakeCode
				,et.eClassTakeState
				,ep.eClassApprovedName
				,et.eClassApprovedCode
			FROM
				eclasstake AS et
				INNER JOIN 
				eclassapproved AS ep
				ON 
				et.eClassApprovedCode = ep.eClassApprovedCode
			WHERE
				 et.eClassTakeState = '수강중'
				and
				 et.memberEmail = 'id008@email.com';
		</select> -->
		
		<select id="getworkoutGoalList" resultMap="WorkoutGoalResultMap">
			/* 운동 목표 목록 */
			SELECT
				 m.memberEmail
				,w.workoutGoalContent
				,w.workoutGoalStartDate
				,w.workoutGoalEndDate
			FROM
				workoutgoal AS w
				JOIN 
				member AS m
				ON 
				w.memberEmail = m.memberEmail
			WHERE
				w.memberEmail = 'id004@email.com';
		</select>
		
		<select id="getworkoutLogPrivacyboundsList" resultType="WorkoutLogPrivacybounds">
			/* 일지 공개범위 목록 조회*/
			SELECT 
				 wp.workoutLogPrivacyBoundsCode
				,wp.workoutLogPrivacyBoundsContent
			FROM
				workoutlogprivacybounds AS wp;
		</select>
		
		<select id="geteClassCategoryLargeList" resultMap="EClassCategoryLargeResultMap">
			/* 운동클래스카테고리large 조회 */
			SELECT
				 ec.eClassCategoryLargeCode
				,ec.eClassCategoryLargeName
			FROM
				eclasscategorylarge AS ec;
		</select>
		
		<select id="geteClassCategoryMedium" resultMap="EClassCategoryMediumResultMap" parameterType="String">
			/* 운동클래스 카테고리 Medium 조회 */
			SELECT
				 em.eClassCategoryMediumCode
				,em.eClassCategoryMediumName
			FROM
				eclasscategorymedium AS em
			Where
				em.eClassCategoryLargeCode = #{eClassCategoryLargeCode};	
		</select>
		
		<select id="geteClassCategorySmall" resultMap="EClassCategorySmallResultMap" parameterType="String">
			/* 운동클래스 카테고리 small 조회 */
			SELECT
				 es.eClassCategorySmallCode
				,es.eClassCategorySmallName
			FROM
				 eclasscategorysmall AS es
			WHERE 	
				 es.eClassCategoryMediumCode = #{eClassCategoryMediumCode};
		</select>
		
		<insert id="workoutLogInsert" parameterType="workoutLog">
			/* 일지 등록 처리 */
			INSERT INTO workoutlog
			(	 workoutLogCode
				,memberEmail
				,eClassCategorySmallCode
				,eClassCategorySmallName
				,workoutLogTitle
				,workoutLogContent
				,workoutGoalPlanCode
				,eClassTaskDoCode
				,challengeEnterCode
				,workoutLogPrivacyBoundsCode
				,workoutLogUpdateEmail
				,workoutLogUpdateFinalDate
				,workoutLogDeleteEmail
			)VALUES (
			 	 #{workoutLogCode}
			 	,#{memberEmail}
			 	,#{eClassCategorySmallCode}
			 	,#{eClassCategorySmallName}
			 	,#{workoutLogTitle}
			 	,#{workoutLogContent}
			 	,#{workoutGoalPlanCode}
			 	,#{eClassTaskDoCode}
			 	,#{challengeEnterCode}
			 	,#{workoutLogPrivacyBoundsCode}
			 	,#{workoutLogUpdateEmail}
			 	,NOW()
			 	,#{workoutLogDeleteEmail}
			);
		
		
		
		
		</insert>
	
	</mapper>